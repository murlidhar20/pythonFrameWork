{"name": "test_VerifyExistingCustomer", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <pageObject.loginPage.LoginPage object at 0x0D51E070>\nuserName = 'admin@yourstore.com', password = 'admin'\n\n    @allure.step(\"enter userName and password and click on login button\")\n    def login_to_application(self, userName, password):\n        try:\n            self.BasePage = BasePage(self.driver)\n            self.screenShotPage = GetScreenShot(self.driver)\n            if self.BasePage.element_click(self.button_signIn_xpath)==True:\n                if self.BasePage.enter_text_into_element(self.text_userName_id, userName) == True:\n                    if self.BasePage.element_click(self.text_continue_id) == True:\n                        if self.BasePage.enter_text_into_element(self.text_passWord_id, password) == True:\n                            if self.BasePage.element_click(self.button_login_xpath) == True:\n                                actualPageTitle = self.BasePage.getTitle()\n                                print(\"page title name is :\",actualPageTitle)\n                                if (len(actualPageTitle)):\n                                    actualPageTitle = self.BasePage.getTitle()\n                                    if actualPageTitle == \"Online Shopping site in India: Shop Online for Mobiles, Books, Watches, Shoes and More - Amazon.in\":\n                                        self.screenShotPage.getScreenShot(\"user is navigated to Home page\")\n                                        assert True\n                                    else:\n                                        self.screenShotPage.getScreenShot(\"user is not navigated to Home page\")\n                                        assert False\n                                else:\n                                    self.screenShotPage.getScreenShot(\"Unable to capture Page title\")\n                                    assert False\n                            else:\n                                self.screenShotPage.getScreenShot(\"Unable to sign in page\")\n                                assert False\n                        else:\n                            self.screenShotPage.getScreenShot(\"Unable to entered password name\")\n                            assert False\n                    else:\n                        self.screenShotPage.getScreenShot(\"Unable to clicked continue button in login page\")\n                        assert False\n                else:\n                    self.screenShotPage.getScreenShot(\"Unable to entered user name\")\n                    assert False\n            else:\n                self.screenShotPage.getScreenShot(\"Unable to clicked on Sign in\")\n>               assert False\nE               AssertionError\n\npageObject\\loginPage.py:117: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testCase.test_login.Test0001 object at 0x0D4EB110>\nsetUp = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"190a4b8f19cac897922ccda1318eb0cf\")>\n\n    @allure.description(\"verify exiting customer record\")\n    @allure.epic(\"verify exiting customer record in epic\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @pytest.mark.sanity\n    # @pytest.mark.depends(on=['test_welcome_to_home_Page'])\n    def test_VerifyExistingCustomer(self, setUp):\n        self.logger.info(\"*********** Start TC 001*********** \")\n        self.logger.info(\"*********** verify existing customer details *********** \")\n    \n        self.driver = setUp\n    \n        self.ip = LoginPage(self.driver)\n        self._basePage = BasePage(self.driver)\n        self._homePage = HomePage(self.driver)\n        self._customer = Customer(self.driver)\n    \n        print(\"-----------------------test_VerifyExistingCustomer----------------------------\")\n    \n        self.customer = ExcelReader.read_data(self.path, \"Sheet1\", 2, 4)\n    \n        print(self.customer)\n    \n        self.logger.info(\"************* Enter the Url  ************\")\n        self.driver.get(self.baseUrl)\n    \n>       self.ip.login_to_application(self.username, self.password)\n\ntestCase\\test_login.py:204: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pageObject.loginPage.LoginPage object at 0x0D51E070>\nuserName = 'admin@yourstore.com', password = 'admin'\n\n    @allure.step(\"enter userName and password and click on login button\")\n    def login_to_application(self, userName, password):\n        try:\n            self.BasePage = BasePage(self.driver)\n            self.screenShotPage = GetScreenShot(self.driver)\n            if self.BasePage.element_click(self.button_signIn_xpath)==True:\n                if self.BasePage.enter_text_into_element(self.text_userName_id, userName) == True:\n                    if self.BasePage.element_click(self.text_continue_id) == True:\n                        if self.BasePage.enter_text_into_element(self.text_passWord_id, password) == True:\n                            if self.BasePage.element_click(self.button_login_xpath) == True:\n                                actualPageTitle = self.BasePage.getTitle()\n                                print(\"page title name is :\",actualPageTitle)\n                                if (len(actualPageTitle)):\n                                    actualPageTitle = self.BasePage.getTitle()\n                                    if actualPageTitle == \"Online Shopping site in India: Shop Online for Mobiles, Books, Watches, Shoes and More - Amazon.in\":\n                                        self.screenShotPage.getScreenShot(\"user is navigated to Home page\")\n                                        assert True\n                                    else:\n                                        self.screenShotPage.getScreenShot(\"user is not navigated to Home page\")\n                                        assert False\n                                else:\n                                    self.screenShotPage.getScreenShot(\"Unable to capture Page title\")\n                                    assert False\n                            else:\n                                self.screenShotPage.getScreenShot(\"Unable to sign in page\")\n                                assert False\n                        else:\n                            self.screenShotPage.getScreenShot(\"Unable to entered password name\")\n                            assert False\n                    else:\n                        self.screenShotPage.getScreenShot(\"Unable to clicked continue button in login page\")\n                        assert False\n                else:\n                    self.screenShotPage.getScreenShot(\"Unable to entered user name\")\n                    assert False\n            else:\n                self.screenShotPage.getScreenShot(\"Unable to clicked on Sign in\")\n                assert False\n        except:\n            self.screenShotPage.getScreenShot(\"Exception occurred while the login the application\")\n>           assert False\nE           AssertionError\n\npageObject\\loginPage.py:120: AssertionError"}, "description": "verify exiting customer record", "steps": [{"name": "enter userName and password and click on login button", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"c:\\users\\hp\\appdata\\local\\programs\\python\\python36-32\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\HP\\.jenkins\\workspace\\pythonFrameWork\\pageObject\\loginPage.py\", line 120, in login_to_application\n    assert False\n"}, "attachments": [{"name": "Unable to clicked on Sign in", "source": "dd50326c-bdd7-42fa-946e-3ca9829e8df7-attachment.png", "type": "image/png"}, {"name": "Exception occurred while the login the application", "source": "fb8414f2-3db3-4b26-9829-b4837871b0e8-attachment.png", "type": "image/png"}], "parameters": [{"name": "userName", "value": "'admin@yourstore.com'"}, {"name": "password", "value": "'admin'"}], "start": 1656306095383, "stop": 1656306125843}], "attachments": [{"name": "log", "source": "2b91ee98-3f1f-4283-be3b-1ab1843e4cb8-attachment.txt", "type": "text/plain"}], "start": 1656306090987, "stop": 1656306125851, "uuid": "06de6f42-576d-469a-a186-3bf18ca317d0", "historyId": "7a080e7e3f02b060a166e55b5ed17c6b", "testCaseId": "c1ee2737e7e399ad1b8ac347c5871d91", "fullName": "test_login.Test0001#test_VerifyExistingCustomer", "labels": [{"name": "severity", "value": "normal"}, {"name": "epic", "value": "verify exiting customer record in epic"}, {"name": "tag", "value": "sanity"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "Test0001"}, {"name": "host", "value": "LAPTOP-T5HL6KR5"}, {"name": "thread", "value": "19648-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_login"}]}